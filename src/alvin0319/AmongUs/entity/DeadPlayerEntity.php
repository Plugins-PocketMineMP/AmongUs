<?php

/*
 *      _                                _   _
 *    / \   _ __ ___   ___  _ __   __ _| | | |___
 *   / _ \ | '_ ` _ \ / _ \| '_ \ / _` | | | / __|
 *  / ___ \| | | | | | (_) | | | | (_| | |_| \__ \
 * /_/   \_\_| |_| |_|\___/|_| |_|\__, |\___/|___/
 *                                |___/
 *
 * A PocketMine-MP plugin that implements AmongUs 
 *
 * Copyright (C) 2020 alvin0319
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 * @author alvin0319
 */

declare(strict_types=1);

namespace alvin0319\AmongUs\entity;

use alvin0319\AmongUs\AmongUs;
use pocketmine\entity\Entity;
use pocketmine\entity\Human;
use pocketmine\event\entity\EntityDamageEvent;
use pocketmine\Player;

class DeadPlayerEntity extends Human{

	protected $playerName;

	protected function initEntity() : void{
		parent::initEntity();
		$this->setPlayerFlag(Entity::DATA_PLAYER_BED_POSITION, true);

		$this->setCanSaveWithChunk(false);

		$this->playerName = $this->namedtag->getString("playerName", "");
	}

	public function onUpdate(int $currentTick) : bool{
		if(!$this->getPlayerFlag(Entity::DATA_PLAYER_FLAG_SLEEP)){
			$this->setPlayerFlag(Entity::DATA_PLAYER_FLAG_SLEEP, true);
			$this->getDataPropertyManager()->setBlockPos(Entity::DATA_PLAYER_BED_POSITION, $this->floor()->add(0, -0.3, 0));
		}
		return parent::onUpdate($currentTick); // TODO: Change the autogenerated stub
	}

	public function attack(EntityDamageEvent $source) : void{
		$source->setCancelled();
	}

	public function interact(Player $player) : void{
		$game = AmongUs::getInstance()->getGameByPlayer($player);
		if($game === null){
			return;
		}
		$character = $game->getCharacter($player);
		if($character === null){
			return;
		}
		if($game->isDead($player)){
			return;
		}
		$game->onEmergencyCall($player, $this);
		$this->close();
	}

	public function getPlayerName() : string{
		return $this->playerName;
	}
}